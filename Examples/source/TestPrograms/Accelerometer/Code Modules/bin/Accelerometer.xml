<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Accelerometer</name>
    </assembly>
    <members>
        <member name="T:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.Common.Constants">
            <summary>
            Internal class containing all constant values used within the project.
            </summary>
        </member>
        <member name="T:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps">
            <summary>
            Partial class containing all test steps for the project.
            This is declared as a partial class so that test code modules can be managed as unique methods in separate files.
            </summary>
            <summary>
            Partial class containing all test steps for the project.
            This is declared as a partial class so that test code modules can be managed as unique methods in separate files.
            </summary>
            <summary>
            Partial class containing all test steps for the project.
            This is declared as a partial class so that test code modules can be managed as unique methods in separate files.
            </summary>
            <summary>
            Partial class containing all test steps for the project.
            This is declared as a partial class so that test code modules can be managed as unique methods in separate files.
            </summary>
            <summary>
            Partial class containing all test steps for the project.
            This is declared as a partial class so that test code modules can be managed as unique methods in separate files.
            </summary>
            <summary>
            Partial class containing all test steps for the project.
            This is declared as a partial class so that test code modules can be managed as unique methods in separate files.
            </summary>
            <summary>
            Partial class containing all test steps for the project.
            This is declared as a partial class so that test code modules can be managed as unique methods in separate files.
            </summary>
            <summary>
            Partial class containing all test steps for the project.
            This is declared as a partial class so that test code modules can be managed as unique methods in separate files.
            </summary>
            <summary>
            Partial class containing all test steps for the project.
            This is declared as a partial class so that test code modules can be managed as unique methods in separate files.
            </summary>
            <summary>
            Partial class containing all test steps for the project.
            This is declared as a partial class so that test code modules can be managed as unique methods in separate files.
            </summary>
            <summary>
            Partial class containing all test steps for the project.
            This is declared as a partial class so that test code modules can be managed as unique methods in separate files.
            </summary>
            <summary>
            Partial class containing all test steps for the project.
            This is declared as a partial class so that test code modules can be managed as unique methods in separate files.
            </summary>
            <summary>
            Partial class containing all test steps for the project.
            This is declared as a partial class so that test code modules can be managed as unique methods in separate files.
            </summary>
            <summary>
            Partial class containing all test steps for the project.
            This is declared as a partial class so that test code modules can be managed as unique methods in separate files.
            </summary>
            <summary>
            Partial class containing all test steps for the project.
            This is declared as a partial class so that test code modules can be managed as unique methods in separate files.
            </summary>
            <summary>
            Partial class containing all test steps for the project.
            This is declared as a partial class so that test code modules can be managed as unique methods in separate files.
            </summary>
            <summary>
            Partial class containing all test steps for the project.
            This is declared as a partial class so that test code modules can be managed as unique methods in separate files.
            </summary>
            <summary>
            Partial class containing all test steps for the project.
            This is declared as a partial class so that test code modules can be managed as unique methods in separate files.
            </summary>
            <summary>
            Partial class containing all test steps for the project.
            This is declared as a partial class so that test code modules can be managed as unique methods in separate files.
            </summary>
        </member>
        <member name="M:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps.BurstPattern(NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext,System.String[],System.String,System.String)">
            <summary>
            Bursts pattern and publishes pass/fail results.
            </summary>
            <param name="semiconductorModuleContext">The <see cref="T:NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext"/> object.</param>
            <param name="spiPortPins">The SPI port pin names, as defined in the specified pattern.</param>
            <param name="patternName">Pattern label to burst.</param>
            <param name="publishedDataId">Published Data Id.</param>
        </member>
        <member name="M:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps.CheckPartNumberRegisterWithMultipleVccValues(NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext,System.String[],System.String,System.String[])">
            <summary>
            Checks to confirm the PartNumber register of the DUT can be read under multiple Vcc conditions.
            </summary>
            <param name="semiconductorModuleContext">The <see cref="T:NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext"/> object.</param>
            <param name="spiPortPinNames">The SPI port pin names, as defined in the specified pattern.</param>
            <param name="vccPinName">The DUT's Vcc supply pin name, as defined in the pin map file.</param>
            <param name="vccVoltageSymbolsToTest">The symbols defining the Vcc voltage level specifications to test, as defined in the specifications file.</param>
        </member>
        <member name="M:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps.ConfigureTemperatureController(NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext)">
            <summary>
            Initializes and configures the temperature controller.
            This code module is intended to be called only once during test program execution, when the lot starts.
            </summary>
            <param name="semiconductorModuleContext">The <see cref="T:NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext"/> object.</param>
        </member>
        <member name="M:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps.ConnectVRefPin(NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext,System.String)">
            <summary>
            Applies the appropriate relay configuration to connect the VRef pin to the DUT.
            After applying the relay configuration, the method will wait for the settling
            based on the value defined by the SettlingTimes.Relay symbol within the loaded specifications file.
            Throws an exception if the SettlingTimes.Relay symbol cannot be found within the loaded specifications file.
            </summary>
            <param name="semiconductorModuleContext">The <see cref="T:NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext"/> object.</param>
            <param name="relayConfiguration">The appropriate relay configuration to connect the VRef pin to the DUT,</param>
        </member>
        <member name="M:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps.DisableInstrumentOutputs(NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext,System.Double)">
            <summary>
            Disables the output of the instruments connected to the DUT.
            </summary>
            <param name="semiconductorModuleContext">The <see cref="T:NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext"/> object.</param>
            <param name="settlingTime">The amount of time to wait, in Seconds, for the output to settling after it has been disabled.</param>
        </member>
        <member name="M:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps.MeasureVref(NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext,System.String)">
            <summary>
            Measures the analog output signal from the DUT's Vref pin using the Scope instrument.
            The signal is measured as a waveform of multiple samples.
            The min, max, and average values of the resulting waveform are published,
            using Min, Max, and DCValue as the respective published data ids.
            </summary>
            <param name="semiconductorModuleContext">The <see cref="T:NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext"/> object.</param>
            <param name="scopePinName">The scope pin name, as defined in the loaded pin map file.</param>
        </member>
        <member name="M:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps.PowerToggle(NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext,System.Boolean)">
            <summary>
            Toggles the power relay based on the powerOn input parameter (true = closes relay or false = opens relay).
            After applying the appropriate relay action, the method will wait for the settling
            based on the value defined by the SettlingTimes.Relay symbol within the loaded specifications file.
            Throws an exception if the SettlingTimes.Relay symbol cannot be found within the loaded specifications file.
            </summary>
            <param name="semiconductorModuleContext">The <see cref="T:NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext"/> object.</param>
            <param name="powerOn">Whether to close (true) or open (false) the power relay.</param>
        </member>
        <member name="M:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps.ResetAndCloseTemperatureController(NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext)">
            <summary>
            Resets the temperature controller to room temperatures and performs required shutdown steps.
            This code module is intended to be called only once during test program execution, when the lot ends.
            </summary>
            <param name="semiconductorModuleContext">The <see cref="T:NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext"/> object.</param>
        </member>
        <member name="M:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps.ResetDUTAndSetMode(NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext,System.String,System.String)">
            <summary>
            Resets the DUT and sets the test mode.
            </summary>
            <param name="semiconductorModuleContext">The <see cref="T:NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext"/> object.</param>
            <param name="rstPinName">The DUT's RST pin name, as defined in the pin map file.</param>
            <param name="modePinName">The DUT's Test Mode pin name, as defined in the pin map file.</param>
        </member>
        <member name="M:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps.ResetPowerSupplyToVccTypical(NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext,System.String[])">
            <summary>
            Resets the DUT power supply to the typical Vcc condition, as defined in the specifications file.
            </summary>
            <param name="semiconductorModuleContext">The <see cref="T:NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext"/> object.</param>
            <param name="powerSupplyPinNames">The DUT's power supply pin names, as defined in the pin map file.</param>
        </member>
        <member name="M:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps.SetupNIScopeForVref(NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext,System.String)">
            <summary>
            Sets up the NI Scope instrument to measure the DUT's VRef signal.
            This code module is intended to be called only once during test program execution, when the lot starts.
            </summary>
            <param name="semiconductorModuleContext">The <see cref="T:NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext"/> object.</param>
            <param name="pinName">The scope pin name, as defined in the pin map file (default: Vref_OScope).</param>
        </member>
        <member name="M:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps.SetupVcc(NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext,System.String[])">
            <summary>
            Configures the DCPower instruments that will source and measure the DUT's Vcc pin.
            </summary>
            <param name="semiconductorModuleContext">The <see cref="T:NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext"/> object.</param>
            <param name="pinsAndPinGroups">The name of the DUT's supply pin(s) or pin group(s), as defined in the pin map file.</param>
            <exception cref="T:System.ArgumentException">This exception will be thrown if any of the pins do not map to a DCPower instrument.</exception>
        </member>
        <member name="M:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps.TemplateTestStep(NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext)">
            <summary>
            Call this method from the test executive to execute the test code.
            </summary>
            <param name="semiconductorModuleContext">The <see cref="T:NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext"/> object reference.</param>
        </member>
        <member name="M:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps.TestContinuity(NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext,System.String[])">
            <summary>
            Tests the DUT pin connections to verify continuity, checking for both opens and shorted connections.
            Pins mapped to either DCPower and Digital instruments are supported.
            DCPower pins are operated on first, followed by Digital pins.
            Test method procedure:
            1. All pins will be forced to zero Volts at start of testing.
            2. For each pin, serially, one-at-a-time:
            2a. Force negative current on the pin.
            2b. Wait for settling.
            2c. Measure voltage and publish results (id: Continuity Sinking)
            2d. Force positive current on the pin.
            2e. Wait for settling.
            2f. Measure voltage and publish results (id: Continuity Sourcing)
            2g. Forced pin back down to zero Volts.
            </summary>
            <param name="semiconductorModuleContext">The <see cref="T:NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext"/> object.</param>
            <param name="pinsAndPinGroups">The name of DUT pins or pin group(s) to test continuity, as defined in the pin map file.</param>
            <exception cref="T:System.ArgumentException">This exception will be thrown if any of the pins do not map to either a DCPower or Digital instrument.</exception>
        </member>
        <member name="M:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps.TestIdlePowerConsumption(NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext,System.String,System.String)">
            <summary>
            Test the idle power computation of the DUT by measuring the current of both the DUT's supply and ground pins.
            </summary>
            <param name="semiconductorModuleContext">The <see cref="T:NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext"/> object.</param>
            <param name="vccPinName">The DUT's Vcc supply pin name, as defined in the pin map file.</param>
            <param name="gndPinName">The DUT's GND pin name, as defined in the pin map file.</param>
        </member>
        <member name="M:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps.TestLeakage(NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext,System.String[])">
            <summary>
            Tests the leakage current for specified DUT pins and/or pin groups.
            Test method procedure:
            1. All pins will be forced to zero Volts at start of testing.
            2. For each pin, serially, one-at-a-time:
            2a. Force voltage high on the pin.
            2b. Wait for settling.
            2c. Measure current and publish results (id: Leakage High)
            2d. Force positive current on the pin.
            2e. Wait for settling.
            2f. Measure current and publish results (id: Leakage Low)
            2g. Turn off the output to the pin.
            The voltage levels and the max current limit are set based on the values defined by symbols from the specification file.
            </summary>
            <param name="semiconductorModuleContext">The <see cref="T:NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext"/> object.</param>
            <param name="pinsAndPinGroups">The name of DUT pins or pin group(s) to test leakage, as defined in the pin map file.</param>
        </member>
        <member name="M:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps.TrimVrefValue(NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext,System.String[])">
            <summary>
            Trims the DUT's Vref value.
            </summary>
            <param name="semiconductorModuleContext">The <see cref="T:NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext"/> object.</param>
            <param name="spiPortPins">The SPI port pin names, as defined in the SetVrefValue pattern.</param>
        </member>
        <member name="M:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps.TurnOnPowerToDUT(NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext,System.String[])">
            <summary>
            Turns on power to the DUT by forcing voltage at the typical Vcc value, as defined in the specifications file.
            </summary>
            <param name="semiconductorModuleContext">The <see cref="T:NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext"/> object.</param>
            <param name="powerSupplyPinNames">The name of the DUT's supply pin(s) or pin group(s), as defined in the pin map file.</param>
        </member>
        <member name="M:NationalInstruments.Examples.SemiconductorTestLibrary.Accelerometer.TestSteps.WaitForTemperature(NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext)">
            <summary>
            Waits for the temperature to reach the configured temperature value.
            </summary>
            <param name="semiconductorModuleContext">The <see cref="T:NationalInstruments.TestStand.SemiconductorModule.CodeModuleAPI.ISemiconductorModuleContext"/> object.</param>
            <exception cref="T:System.TimeoutException">
            This exception is thrown if the configured temperature is not reached within the timeout limit (15 seconds).
            </exception>
        </member>
    </members>
</doc>
